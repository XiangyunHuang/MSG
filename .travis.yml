language: r
r: 
 - 4.0.2
dist: xenial
services:
  - xvfb
cache:
  packages: true
  directories:
    - _bookdown_files
    - $HOME/.npm
    
latex: false
pandoc_version: 2.10.1

env:
  global:
    - MAKEFLAGS="-j 2"

repos:
  CRAN: https://cloud.r-project.org

addons:
  apt:
    sources:
      - sourceline: 'ppa:cran/ffmpeg-4'
    packages:
      - ghostscript
      - imagemagick
      - optipng
      - graphviz
      - cargo
      - libavfilter-dev
      # magick
      - libmagick++-dev
      # pdftools
      - libpoppler-cpp-dev
      # rgl
      - libglu1-mesa-dev
      - libnlopt-dev
      - graphviz
      # sf
      - libudunits2-dev	
      - libproj-dev 	
      - libgeos-dev 	
      - libgdal-dev
      - libgtk2.0-dev

before_script:
  - mkdir -p ~/.R ~/.fonts
  - Rscript -e 'install.packages("tinytex"); tinytex:::install_prebuilt(); tinytex::tinytex_root()'
  - export PATH=$HOME/bin:$PATH
  - tlmgr update --self --all  
  - tlmgr install ctex xecjk mdwtools zhnumber ulem ms xcolor unicode-math filehook lm-math
      subfig sourcecodepro sourceserifpro sourcesanspro cancel titlepic pgf preview psnfss
      jknapltx titlesec tocbibind tocloft trimspaces savesym environ fancyhdr listings
      psnfss realscripts relsize rsfs setspace soul xltxtra mathdesign animate pdfcrop ocgx2 media9
  - curl -fLo Adobe-Fonts.zip https://github.com/XiangyunHuang/fonts/releases/download/v0.1/Adobe-Fonts.zip
  - unzip Adobe-Fonts.zip -d ~/.fonts/adobe
  - fc-cache -fsv
  - Rscript -e "sessionInfo(.packages(T));capabilities()"
  - Rscript -e 'update.packages(lib.loc = .libPaths()[1], ask = FALSE)'
  - Rscript -e 'library(tikzDevice);tikzTest();tikzTest("$\\sin(x^2/2 - y^2/4 + 3) \\cos(2 x + 1 - \\exp(y))$")'

script:
  - mkdir -p _book/interactives && cp -r interactives/* _book/interactives
  - Rscript -e 'bookdown::render_book("index.Rmd", "all")'

# after_success:
#   - npm install netlify-cli -g
#   # deploy with messages 
#   - export COMMIT_MSG=$(git log -1 --format='%h %<(50,trunc)%s')
#   - echo $COMMIT_MSG
#   - export DEPLOY_MSG=${COMMIT_MSG//[\'\"\`]/}
#   - echo $DEPLOY_MSG
# 
# deploy:
#   - provider: script
#     script: netlify deploy --dir _book --prod --message "$DEPLOY_MSG"    
#     skip_cleanup: true
#     on:
#       branch: master
#   - provider: script
#     script: netlify deploy --dir _book --message "$DEPLOY_MSG"    
#     skip_cleanup: true
#     on:
#       all_branches: true
#       condition: $TRAVIS_BRANCH != "master"
